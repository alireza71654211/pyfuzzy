import unittest
from pyfuzzy.operators import union_max

class UnionMaxTestCase(unittest.TestCase):

    def test_union_max_1(self):
        u = {"a":1.0 , "b":1.0 , "c":1.0}
        a = {"a":1.0 , "b":3.0 , "c":0.7}
        b = {"a":0.6 , "b":0.5 , "c":0.8}
        self.assertRaises(TypeError, lambda: union_max.union_max(u, a, b))

    def test_union_max_2(self):
        u = {"a":1.0 , "b":1.0 , "c":1.0}
        a = {"a":0.2 , "b":0.7}
        b = 2
        self.assertRaises(TypeError, lambda: union_max.union_max(u, a, b))

    def test_union_max_3(self):
        u = 3
        a = {"a":1.0 , "b":0.4 , "c":0.9}
        b = {"a":0.6 , "b":0.5 , "c":1.0}
        self.assertRaises(TypeError, lambda: union_max.union_max(u, a, b))

    def test_union_max_4(self):
        u = {"a":1.0 , "b":1.0 , "c":1.0}
        a = 1
        b = {"a":1.0 , "c":0.8}
        self.assertRaises(TypeError, lambda: union_max.union_max(u, a, b))

    def test_union_max_5(self):
        u = {"a":1.0 , "b":1.0 , "c":1.0}
        a = {"a":1.0 , "b":0.3 , "c":0.7}
        b = {"a":0.6 , "b":0.5 , "c":0.8 , "d":0.7}
        self.assertRaises(TypeError, lambda: union_max.union_max(u, a, b))

    def test_union_max_6(self):
        u = {"a":1.0 , "b":1.0}
        a = {"a":1.0 , "b":3.0 , "c":1.0}
        b = {"a":0.6 , "b":0.5}
        self.assertRaises(TypeError, lambda: union_max.union_max(u, a, b))

    def test_union_max_7(self):
        u = {"a":1.0 , "b":1.0 , "c":1.0}
        a = {"a":0.8 , "b":0.8 , "c":0.7}
        b = {"a":0.6 , "b":0.5 , "c":'str'}
        self.assertRaises(TypeError, lambda: union_max.union_max(u, a, b))

    def test_union_max_8(self):
        u = {"b":'abcd' , "c":1.0}
        a = {"a":1.0 , "b":0.6 , "c":0.7}
        b = {"a":0.6 , "b":0.5 , "c":0.8}
        self.assertRaises(TypeError, lambda: union_max.union_max(u, a, b))

    def test_union_max_9(self):
        u = {"a":1.0 , "b":1.0 , "c":2.0}
        a = {"a":0.2 , "b":0.1 , "c":0.7}
        b = {"a":0.6 , "b":0.5 , "c":0.8}
        self.assertRaises(TypeError, lambda: union_max.union_max(u, a, b))

    def test_union_max_10(self):
        u = {"a":1.0 , "b":1.0 , "c":1.0}
        a = {"a":1.0 , "b":0.2 , "c":0.7}
        b = {"g":0.6 , "c":0.8}
        self.assertRaises(TypeError, lambda: union_max.union_max(u, a, b))

    def test_union_max_11(self):
        u = {"a":1.0 , "b":1.0 , "c":1.0}
        a = {"a":1.0 , "b":0.6 , "c":0.7}
        b = {"a":0.6 , "b":0.5 , "c":0.8}
        self.assertEqual(union_max.union_max(u, a, b) , {"a": 1.0, "b": 0.6, "c": 0.8})

    def test_union_max_12(self):
        u = {"a":1.0 , "b":1.0 , "c":1.0}
        a = {"a":0.9 , "b":0.6}
        b = {"a":0.6 , "b":0.5 , "c":0.7}
        self.assertEqual(union_max.union_max(u, a, b) , {"a": 0.9, "b": 0.6, "c": 0.7})

    def test_union_max_13(self):
        u = {"a":1.0 , "b":1.0 , "c":1.0}
        a = {"a":1.0 , "c":0.6}
        b = {"b":0.5}
        self.assertEqual(union_max.union_max(u, a, b) , {"a": 1.0, "b": 0.5, "c": 0.6})

    def test_union_max_14(self):
        u = {"a":1.0 , "b":1.0 , "c":1.0}
        a = {"a":1.0 , "b":0.8 , "c":0.4}
        b = {"a":0.5 , "b":1.0 , "c":0.3}
        self.assertEqual(union_max.union_max(u, a, b) , {"a": 1.0, "b": 1.0, "c": 0.4})
